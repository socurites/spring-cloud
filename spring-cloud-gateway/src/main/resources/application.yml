server:
  port: 8080
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      routes:
#        - id: user-service
##          uri: http://localhost:61442/
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/users/**
#          filters:
##            - AddRequestHeader=req-header-key,req-header-value
##            - AddResponseHeader=res-header-key,res-header-value
#            - name: CustomFilter
#            - name: LoggingFilter
#              args:
#                baseMessage: Inner Logging Filter
#                preLogger: true
#                postLogger: true
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie    # tells the gateway to remove the users “Cookie” header from the request during the routing operation (because downstream services don’t need this, all they need is the JWT access_token)
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
            - name: LoggingFilter
              args:
                baseMessage: Inner Logging Filter
                preLogger: true
                postLogger: true
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/catalogs/**
          filters:
            - RewritePath=/catalog-service/(?<segment>.*), /$\{segment}
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Inner Logging Filter
                preLogger: true
                postLogger: true
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/orders/**
          filters:
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Inner Logging Filter
                preLogger: true
                postLogger: true
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
#token:
#  secret: any-token-secret
management:
  endpoints:
    web:
      exposure:
        include:
          - refresh
          - health
          - beans
          - httptrace
#          - busrefresh
          - info
          - metrics
          - prometheus