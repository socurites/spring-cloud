server:
  port: 0   # random port
spring:
  application:
    name: catalog-service
  datasource:
#    url: jdbc:h2:tcp://localhost:9090/mem:testdb
    url: jdbc:h2:mem:testdb
  jpa:
    show-sql: true
#    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
  kafka:
    properties:
      bootstrap:
        servers: pkc-4v1gp.ap-northeast-1.aws.confluent.cloud:9092
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas:
          config: "org.apache.kafka.common.security.plain.PlainLoginModule   required username='GA7AM2HHI2O42L2Q'   password='5i0exPKhSM+RdjIzz5QLynRdwYu0cHuhDpAK/t+vnST6dCZLjENvGM7iGCfAskc2';"
#    producer:
#      client-id: test-order-producer
#      retries: 0
#      acks: all
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    #      batch-size:
    consumer:
      group-id: test-order-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: true
eureka:
  instance:
    instance-id: '${spring.application.name}:${spring.application.instance_id:${random.value}}'
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      deefaultZone: http://127.0.0.1:8761/eureka
greeting:
  message: Welcom to the spring-cloud user-service
app:
  kafka:
    topic: test-order.topic
---
spring:
  config:
    activate:
      on-profile: local-docker
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://discovery-service:8761/eureka